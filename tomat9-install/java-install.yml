---
- name: tomacat9 install
  hosts: appserver
  become: yes
  vars:
    - user_name: tomcat
    - bash_path: /bin/false
    - user_homedir: /opt/tomcat
    - VERSION: 9.0.64
    - tomcat_latest: /opt/tomcat/latest
    - tomcat_service_file_location: /etc/systemd/system/tomcat.service

  tasks:
    - name: update cache the ubuntu
      ansible.builtin.apt:
         update_cache: yes
      when: ansible_facts['os_family'] == "Debian"
    - name: java install
      ansible.builtin.package:
        name: "{{ java_package }}"
        state: present
      when: ansible_facts['os_family'] == "Debian"
    - name: create tomcat user
      ansible.builtin.user:
        name: "{{ user_name }}" 
        shell: "{{ bash_path }}"
        create_home: yes
        home: "{{ user_homedir }}"
        state: present
      when: ansible_facts['os_family'] == "Debian"
    - name: download tomacat
      ansible.builtin.get_url:
        url: "https://dlcdn.apache.org/tomcat/tomcat-9/v{{ VERSION }}/bin/apache-tomcat-{{ VERSION }}.tar.gz"
        dest: "/tmp/apache-tomcat-{{ VERSION }}.tar.gz"
      when: ansible_facts['os_family'] == "Debian"
    - name: untar the tomacat
      ansible.builtin.unarchive:
        src: "/tmp/apache-tomcat-{{ VERSION }}.tar.gz"
        dest: "{{ user_homedir }}/"
        remote_src: yes
        group: "{{ user_name }}"
        owner: "{{ user_name }}"
        creates: "{{ user_homedir }}/apache-tomcat-{{ VERSION }}"
      when: ansible_facts['os_family'] == "Debian"
    - name: create a symlink for tomcat
      ansible.builtin.file:
        src: "{{ user_homedir }}/apache-tomcat-{{ VERSION }}"
        dest: "{{ tomcat_latest }}"
        group: "{{ user_name }}"
        owner: "{{ user_name }}"
        state: link
      when: ansible_facts['os_family'] == "Debian"
    - name: change owner of tomcat
      ansible.builtin.file:
        path: "{{ user_homedir }}/apache-tomcat-{{ VERSION }}"
        group: "{{ user_name }}"
        owner: "{{ user_name }}" 
        recurse: yes
      when: ansible_facts['os_family'] == "Debian"
    - name: print the sh files
      ansible.builtin.debug:
        var: /opt/tomcat/latest/bin
      when: ansible_facts['os_family'] == "Debian"
      register: 'sh_file_bin'
    - name: print the sh files
      ansible.builtin.debug:
        var: "sh_file_bin"
      when: ansible_facts['os_family'] == "Debian"
    - name: excutable permission .sh files
      ansible.builtin.file:
        path: "{{ item.path }}"
        group: "{{ user_name }}"
        owner: "{{ user_name }}" 
        mode: '0755'
      loop: "{{ sh_file_bin.files }}"
      when: ansible_facts['os_family'] == "Debian"
    - name: tomcat service files
      ansible.builtin.copy:
        src: 'tomcat.service'
        dest: "{{ tomcat_service_file_location }}"
        group: "{{ user_name }}"
        owner: "{{ user_name }}" 
        remote_src: yes
      when: ansible_facts['os_family'] == "Debian"